정수 N개로 이루어진 배열과 두 개의 인덱스 L, R이 주어졌을 때, 배열의 L번째 원소부터 R번째 원소까지만버블 정렬을 수행해주먼서
오름차순으로 정렬하는 프로그램을 작성해봅시다.
일단 배열의 나머지 부분은 정렬 대상에서 제외되니까 L 이전과 R 이후의 원소들은 입력된 그대로 유지되어야겠죠.
그러니까 배열이 [10, 5, 3, 2, 9, 6, 4]이고 L=3, R=6 (1번 인덱스를 기준으로 세 번째부터 여섯 번째 원소)인 경우
부분 배열 [3, 2, 9, 6]만 정렬해서 [2, 3, 6, 9]로 만들고, 최종 배열은 [10, 5, 2, 3, 6, 9, 4]가 되어야 해요/
프로그램은 입력으로 주어진 인덱스 범위만을 정렬하도록 구현해야 하고 이 때 인덱스 범위가 잘못되었는지도 확인해야 합니다.

문제를 해보는 이유 : 우리가 여태까지 배운 것으로 배열 전체를 정렬하는 것에는 익숙할 수 있어도,
특정 구간만 선택적으로 정렬하는 방법에서 혼란을 겪을 수 있습니다. 이 문제는 그러한 부분을 해결하기 위한 문제입니다.
실제로 그러한 경우가 많기도 해서, 현재 알고리즘적으로는 버블 정렬의 범위를 L부터 R로 제한하면 되지만,
이를 위해 이중 루프의 범위를 정확히 설정해야 합니다.
경계 값을 잘못 설정하면 L 이전의 원소가 정렬에 포함되거나, R 이후의 원소와 불필요한 비교를 할 위험이 있습니다.
또한 L과 R이 주어질 때, 1부터 N까지의 유효한 범위인지, L이 R보다 작거나 같은지 등을 검사하는 조건문을 추가로 작성해야 합니다.
지금 설명들으신 예외 처리와 부분 범위 로직 구현으로 인해 세심한 주의가 필요하고 문제 해결 능력을 기를 수 있는 좋은 예제라고 볼 수 있어요~

입력
• 첫째 줄에 정수 N과 L, R이 공백으로 구분되어 주어집니다. (1 ≤ N ≤ 1000, 1 ≤ L ≤ R ≤ N)
• 둘째 줄에 N개의 정수가 공백으로 구분되어 주어집니다. (배열 요소들)

출력
• 부분 정렬을 수행한 후의 배열을 한 줄에 공백으로 구분하여 출력합니다.

예제 입력
7 3 6
10 5 3 2 9 6 4

예제 출력
10 5 2 3 6 9 4

(위 입력에서 7개의 요소 중 3번째부터 6번째 요소 [3, 2, 9, 6]만 정렬하고 [2, 3, 6, 9]로 만들었습니다. 그 외의 위치의 값들은 변경되지 않았습니다.)

제약 조건
• 1 ≤ N ≤ 1000
• 1 ≤ L ≤ R ≤ N (유효한 인덱스 범위가 입력으로 제공됨을 보장합니다. 인덱스는 1부터 시작하는 위치로 간주합니다.)
• 배열의 값은 -1000 ≤ 값 ≤ 1000의 정수입니다.
• 시간 복잡도: 최악의 경우 부분 구간 크기를 M = R-L+1이라고 할 때, O(M^2) 연산을 수행합니다.
   N 최대 1000, M 최대 1000이므로 최악의 경우에도 처리 가능하며, 부분 구간이 작을수록 실제 수행 시간은 더욱 적습니다.